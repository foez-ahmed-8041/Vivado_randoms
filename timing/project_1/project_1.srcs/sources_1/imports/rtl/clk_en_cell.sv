module clk_en_cell #(
) (
  input  logic arst_ni,
  input  logic clk_i,
  input  logic en_i,
  output logic clk_o
);

  //////////////////////////////////////////////////////////////////////////////////////////////////
  //-SIGNALS{{{
  //////////////////////////////////////////////////////////////////////////////////////////////////

  logic buf_en;
  
  //}}}

  //////////////////////////////////////////////////////////////////////////////////////////////////
  //-ASSIGNMENTS{{{
  //////////////////////////////////////////////////////////////////////////////////////////////////
  
  assign clk_o = clk_i & buf_en;

  //}}}

  //////////////////////////////////////////////////////////////////////////////////////////////////
  //-SEQUENTIAL{{{
  //////////////////////////////////////////////////////////////////////////////////////////////////

  always_ff @ (negedge arst_ni or negedge clk_i) begin
    if (~arst_ni) begin
      buf_en <= '0;
    end else begin
      buf_en <= en_i;
    end
  end

  //}}}

endmodule
